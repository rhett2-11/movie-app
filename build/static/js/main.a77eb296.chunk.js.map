{"version":3,"sources":["components/images/reactMovie_logo.png","components/images/tmdb_logo.svg","components/styles/StyledHeader.js","components/elements/Header.js","config.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","components/hooks/useHomeFetch.js","components/Home.js","components/styles/StyledNavigation.js","components/elements/Navigation.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.js","helpers.js","components/styles/StyledMovieInfoBar.js","components/elements/MovieInfoBar.js","components/styles/StyledActor.js","components/elements/Actor.js","components/hooks/useMovieFetch.js","components/Movie.js","components/NotFound.js","components/styles/GlobalStyle.js","components/App.js","index.js","components/images/no_image.png"],"names":["module","exports","StyledHeader","styled","div","StyledRMDBLogo","img","StyledTMDBLogo","Header","className","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","IMAGE_BASE_URL","StyledHeroImage","props","image","HeroImage","title","text","StyledSearchBar","StyledSearchBarContent","SearchBar","callback","useState","state","setState","timeOut","useRef","name","size","type","placeholder","onChange","event","value","target","clearTimeout","current","setTimeout","StyledGrid","StyledGridContent","Grid","header","children","StyledMovieThumb","MovieThumb","movieId","movieName","clickable","StyledLoadMoreBtn","button","LoadMoreBtn","onClick","StyledSpinner","Spinner","Home","searchTerm","setSearchTerm","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","log","useEffect","sessionStorage","homeState","JSON","parse","setItem","stringify","useHomeFetch","backdrop_path","original_title","overview","map","movie","key","id","poster_path","NoImage","searchEndpoint","popularEndpoint","StyledNavigation","Navigation","StyledMovieInfo","backdrop","MovieInfo","vote_average","directors","length","element","credit_id","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","StyledMovieInfoBar","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","StyledActor","Actor","actor","profile_path","character","useMovieFetch","fetchData","useCallback","creditsEndpoint","creditsResult","crew","filter","member","job","actors","cast","localStorage","Movie","runtime","NotFound","GlobalStyle","createGlobalStyle","App","path","default","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a77eb296.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactMovie_logo.08494abf.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n  background: #1c1c1c;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0px;\n    margin: 0 auto;\n    box-sizing: border-box;\n\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`;\n\nexport const StyledRMDBLogo = styled.img`\n  width: 250px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledTMDBLogo = styled.img`\n  width: 122px;\n  margin-top: 25px;\n  float: right;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;\n","import React from 'react';\nimport { Link } from '@reach/router';\n\nimport RMDBLogo from '../images/reactMovie_logo.png';\nimport TMDBLogo from '../images/tmdb_logo.svg';\n\nimport { StyledHeader, StyledRMDBLogo, StyledTMDBLogo } from '../styles/StyledHeader'\n\nconst Header = () => (\n<StyledHeader>\n    <div className=\"header-content\">\n        <Link to=\"/\">\n            <StyledRMDBLogo src={RMDBLogo} alt='rmdb-logo'/>\n        </Link>\n        <StyledTMDBLogo src={TMDBLogo} alt='tmdb-logo'/>\n    </div>\n</StyledHeader>\n)\n\nexport default Header;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/'; \nconst API_KEY = 'a2bc0898b6e448d84ac30c209fd2cf24';\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport { API_URL, API_KEY, SEARCH_BASE_URL, POPULAR_BASE_URL, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE };\n","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledHeroImage } from '../styles/StyledHeroImage';\n\nconst HeroImage = ({image, title, text}) => (\n    <StyledHeroImage image={image}>\n        <div className=\"heroimage-content\">\n            <div className=\"heroimage-text\">\n                <h1>{title}</h1>\n                <p>{text}</p>\n            </div>\n\n        </div>\n    </StyledHeroImage>\n)\n\nHeroImage.propTypes = {\n    image: PropTypes.string,\n    title: PropTypes.string,\n    text: PropTypes.string,\n}\n\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #1c1c1c;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #353535;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport { StyledSearchBar, StyledSearchBarContent } from '../styles/StyledSearchBar';\n\nconst SearchBar = ({ callback }) => {\n\n    const [state, setState] = useState('');\n    const timeOut = useRef(null);\n\n    const doSearch = event => {\n        const { value } = event.target;\n        \n        clearTimeout(timeOut.current);\n        setState(value);\n\n        timeOut.current = setTimeout(() => {\n            callback(value);\n        }, 500);\n\n    }\n\n    return (\n        <StyledSearchBar>\n            <StyledSearchBarContent>\n                <FontAwesome className=\"fa-search\" name=\"search\" size=\"2x\" />\n                <input\n                    type=\"text\"\n                    placeholder=\"Search Movie\"\n                    onChange={doSearch}\n                    value={state}\n                />\n            </StyledSearchBarContent>\n        </StyledSearchBar>\n    )\n}\n\nSearchBar.propTypes = {\n    callback: PropTypes.func\n}\n\nexport default SearchBar;","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  .grid-element {\n    animation: animateGrid 0.5s;\n  }\n\n  @keyframes animateGrid {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledGrid, StyledGridContent } from '../styles/StyledGrid';\n\nconst Grid = ({ header, children }) => (\n    <StyledGrid>\n        <h1>{header}</h1>\n        <StyledGridContent>{children}</StyledGridContent>\n    </StyledGrid>\n)\n\nGrid.propTypes = {\n    header: PropTypes.string,\n}\n\nexport default Grid;","import styled from 'styled-components';\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    height: auto;\n    /* max-height: 350px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    /* @media screen and (max-width: 1024px) {\n      height: 300px;\n    }\n\n    @media screen and (max-width: 768px) {\n      height: 350px;\n    }\n\n    @media screen and (max-width: 600px) {\n      max-height: 300px;\n    }\n\n    @media screen and (max-width: 375px) {\n      max-height: 450px;\n    } */\n\n    h6 {\n      text-decoration: none;\n      font-family: inherit;\n    }\n\n    .clickable {\n      cursor: pointer;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from '@reach/router';\nimport { StyledMovieThumb } from '../styles/StyledMovieThumb';\n\nconst MovieThumb = ({ image, movieId, movieName, clickable}) => (\n    <StyledMovieThumb>\n        {clickable ? (\n            <Link to={`/${movieId}`}>\n                <div>\n                    <img className=\"clickable\" src={image} alt=\"moviethumb\" />\n                    <h5>{movieName}</h5>\n                </div>\n            </Link>\n        ) : (\n            <div>            \n                <img src={image} alt=\"moviethumb\" />\n                <h5>{movieName}</h5>\n            </div>\n            \n        )\n\n        }\n    </StyledMovieThumb>\n)\n\nMovieThumb.propTypes = {\n    image: PropTypes.string,\n    movieId: PropTypes.number,\n    movieName: PropTypes.string,\n    clickable: PropTypes.bool,\n}\n\nexport default MovieThumb;","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn';\n\nconst LoadMoreBtn = ({ text, callback }) => (\n    <StyledLoadMoreBtn type=\"button\" onClick={callback}>\n        {text}\n    </StyledLoadMoreBtn>\n)\n\nLoadMoreBtn.propTypes = {\n    text: PropTypes.string,\n    callback: PropTypes.func\n}\n\nexport default LoadMoreBtn;","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\n\nimport { StyledSpinner } from '../styles/StyledSpinner';\n\nconst Spinner = () => <StyledSpinner />\n\nexport default Spinner;","import { useState, useEffect } from 'react';\nimport { POPULAR_BASE_URL } from '../../config';\n\nexport const useHomeFetch = searchTerm => {\n    const [state, setState] = useState({ movies: [] });\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const fetchMovies = async (endpoint) => {\n        setError(false);\n        setLoading(true);\n\n        const isLoadMore = endpoint.search('page');\n\n        try {\n            const result = await (await fetch(endpoint)).json();\n            setState(prev => ({\n                ...prev,\n                movies:\n                    isLoadMore !== -1\n                ? [...prev.movies, ...result.results]\n                : [...result.results],\n                heroImage: prev.heroImage || result.results[0],\n                currentPage: result.page,\n                totalPages: result.total_pages\n            }));\n\n        } catch (error) {\n            setError(true);\n            console.log(error);\n        }\n        setLoading(false);\n\n    }\n\n    useEffect(() => {\n        if (sessionStorage.homeState) {\n            setState(JSON.parse(sessionStorage.homeState));\n            setLoading(false);\n        } else {\n            fetchMovies(POPULAR_BASE_URL);\n        }\n    }, [])\n\n    useEffect(() => {\n        if (!searchTerm) {\n            sessionStorage.setItem('homeState', JSON.stringify(state))\n        }\n    }, [searchTerm, state])\n\n    return [{ state, loading, error }, fetchMovies];\n}","import React, { useState } from 'react';\nimport { SEARCH_BASE_URL, POPULAR_BASE_URL, POSTER_SIZE, IMAGE_BASE_URL, BACKDROP_SIZE } from '../config';\n\nimport HeroImage from './elements/HeroImage';\nimport SearchBar from './elements/SearchBar';\nimport Grid from './elements/Grid';\nimport MovieThumb from './elements/MovieThumb';\nimport LoadMoreBtn from './elements/LoadMoreBtn';\nimport Spinner from './elements/Spinner';\n\n//custom hook\nimport { useHomeFetch } from './hooks/useHomeFetch';\n\nimport NoImage from './images/no_image.png';\n\nconst Home = () => {\n    const[searchTerm, setSearchTerm] = useState('');\n    \n    const [\n        { \n            state: { movies, currentPage, totalPages, heroImage },\n            loading,\n            error\n        },\n        fetchMovies\n    ] = useHomeFetch(searchTerm);\n\n    const searchMovies = search => {\n        const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\n\n        setSearchTerm(search);\n        fetchMovies(endpoint);\n    }\n\n    const loadMoreMovies = () => {\n        const searchEndpoint = `${SEARCH_BASE_URL}${searchTerm}&page=${currentPage + 1}`;\n        const popularEndpoint = `${POPULAR_BASE_URL}&page=${currentPage + 1}`;\n\n        const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\n\n        fetchMovies(endpoint);\n    }\n\n    if (error) return <div>Something went wrong...</div>\n    if (!movies[0] && totalPages < 1) return <div>No results.</div>\n    if (!movies[0]) return <Spinner />\n\n    return (\n        <>\n            {!searchTerm && (\n            <HeroImage\n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n                title={heroImage.original_title}\n                text={heroImage.overview}\n             />\n            )}\n            <SearchBar callback={searchMovies} />\n            <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\n                {movies.map(movie => (\n                    <MovieThumb\n                        key={movie.id}\n                        clickable\n                        image={\n                            movie.poster_path\n                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                            : NoImage\n                        }\n                        movieId={movie.id}\n                        movieName={movie.original_title}\n                    />\n                ))}\n            </Grid>\n            {loading && <Spinner />}\n            {currentPage < totalPages && !loading && (\n                <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies} />\n            )}\n        </>\n    )\n}\n\nexport default Home;","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from '@reach/router';\nimport { StyledNavigation } from '../styles/StyledNavigation';\n\nconst Navigation = ({ movie }) => (\n    <StyledNavigation>\n        <div className=\"navigation-content\">\n            <Link to=\"/\">\n                <p>Home</p>\n            </Link>\n            <p>|</p>\n            <p>{movie}</p>\n        </div>\n    </StyledNavigation>\n);\n\nNavigation.propTypes = {\n    movie: PropTypes.string\n}\n\nexport default Navigation;","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NoImage from '../images/no_image.png';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\nimport MovieThumb from './MovieThumb';\nimport { StyledMovieInfo } from '../styles/StyledMovieInfo';\n\nconst MovieInfo = ({ movie }) => (\n    <StyledMovieInfo backdrop={movie.backdrop_path}>\n        <div className=\"movieinfo-content\">\n            <div className=\"movieinfo-thumb\">\n                <MovieThumb\n                    image={\n                        movie.poster_path\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                        : NoImage\n                    }\n                    clickable={false}\n                />\n            </div>\n            <div className=\"movieinfo-text\">\n                <h1>{movie.title}</h1>\n                <h3>Plot</h3>\n                <p>{movie.overview}</p>\n                <div className=\"rating-director\">\n                    <div>\n                        <h3>IMDB Rating</h3>\n                        <span className=\"score\">{movie.vote_average}</span>\n                    </div>\n                    <div className=\"director\">\n                        <h3>Director{movie.directors.length > 1 ? 's' : ''}</h3>\n                        {movie.directors.map(element => (\n                            <p key={element.credit_id}>{element.name}</p>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </StyledMovieInfo>\n);\n\nMovieInfo.propTypes = {\n    movie: PropTypes.object,\n}\n\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieInfoBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: auto;\n  background: #1c1c1c;\n  padding: 20px;\n  box-sizing: border-box;\n  font-family: 'Abel', sans-serif;\n  font-size: 20px;\n\n  .movieinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n  }\n\n  .movieinfobar-content-col {\n    float: left;\n    width: 33.33%;\n    box-sizing: border-box;\n    padding: 10px 20px 0 0;\n  }\n\n  .movieinfobar-info {\n    padding: 5px 0 0 10px;\n    float: left;\n  }\n\n  .fa-time,\n  .fa-revenue {\n    float: left;\n    margin-top: -4px;\n  }\n\n  .fa-budget {\n    float: left;\n    margin-top: -3px;\n  }\n\n  @media screen and (max-width: 768px) {\n    .fa-time,\n    .fa-revenue,\n    .fa-budget {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport { calcTime, convertMoney } from '../../helpers';\nimport { StyledMovieInfoBar } from '../styles/StyledMovieInfoBar'\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n    <StyledMovieInfoBar>\n        <div className=\"movieinfobar-content\">\n            <div className=\"movieinfobar-content-col\">\n                <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\n                <span className=\"movieinfobar-info\">\n                    Running time: {calcTime(time)}\n                </span>\n            </div>\n            <div className=\"movieinfobar-content-col\">\n                <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\n                <span className=\"movieinfobar-info\">\n                    Budget: {convertMoney(budget)}\n                </span>\n            </div>\n            <div className=\"movieinfobar-content-col\">\n                <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\n                <span className=\"movieinfobar-info\">\n                    Revenue: {convertMoney(revenue)}\n                </span>\n            </div>\n        </div>\n    </StyledMovieInfoBar>\n);\n\nMovieInfoBar.propTypes = {\n    time: PropTypes.number,\n    budget: PropTypes.number,\n    revenue: PropTypes.number,\n}\n\nexport default MovieInfoBar;","import styled from 'styled-components';\n\nexport const StyledActor = styled.div`\n  font-family: 'Abel', sans-serif;\n  color: #fff;\n  background: #1c1c1c;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NoImage from '../images/no_image.png';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\nimport { StyledActor } from '../styles/StyledActor';\n\nconst Actor = ({ actor }) => (\n    <StyledActor>\n        <img \n            src={\n                actor.profile_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                : NoImage\n            }\n            alt=\"actorthumb\"\n        />\n        <span className=\"actor-name\">{actor.name}</span>\n        <span className=\"actor-character\">{actor.character}</span>\n    </StyledActor>\n)\n\nActor.propTypes = {\n    actor: PropTypes.object,\n}\n\nexport default Actor;\n\n","import { useState, useEffect, useCallback } from 'react';\nimport { API_URL, API_KEY } from '../../config';\n\nexport const useMovieFetch = movieId => {\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    const fetchData = useCallback(async () => {\n        setError(false);\n        setLoading(true);\n\n        try {\n            const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n            const result = await (await fetch(endpoint)).json();\n            const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n            const creditsResult = await (await fetch(creditsEndpoint)).json();\n            const directors = creditsResult.crew.filter(\n                member => member.job === 'Director'\n            );\n\n            setState({\n                ...result,\n                actors: creditsResult.cast,\n                directors\n            })\n\n        } catch (error) {\n            setError(true);\n        }\n        setLoading(false);\n\n    }, [movieId])\n\n    useEffect(() => {\n        if (localStorage[movieId]) {\n            setState(JSON.parse(localStorage[movieId]));\n            setLoading(false);\n        } else {\n            fetchData();\n        }\n    }, [fetchData, movieId])\n\n    useEffect(() => {\n        localStorage.setItem(movieId, JSON.stringify(state));\n    }, [movieId, state])\n\n    return [state, loading, error];\n}\n\nexport default useMovieFetch;","import React from 'react';\n\n//Components\nimport Navigation from './elements/Navigation';\nimport MovieInfo from './elements/MovieInfo';\nimport MovieInfoBar from './elements/MovieInfoBar';\nimport Actor from './elements/Actor';\nimport Grid from './elements/Grid';\nimport Spinner from './elements/Spinner';\n\nimport useMovieFetch from './hooks/useMovieFetch';\n\nconst Movie = ({ movieId }) => {\n    const [movie, loading, error] = useMovieFetch(movieId);\n\n    if (error) return <div>something went wrong...</div>;\n    if (loading) return <Spinner />;\n\n    return (\n        <>\n            <Navigation movie={movie.original_title}/>\n            <MovieInfo movie={movie}/>\n            <MovieInfoBar time={movie.runtime} budget={movie.budget} revenue={movie.revenue}/>\n            <Grid header=\"Actors\">\n                {movie.actors.map(actor => (\n                    <Actor key={actor.credit_id} actor={actor} />\n                ))}\n            </Grid>\n        </>\n    )\n};\n\nexport default Movie;","import React from 'react';\n\nconst NotFound = () => <div>Nothing found here...</div>\n\nexport default NotFound;","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","import React from 'react';\nimport { Router } from '@reach/router';\n\nimport Header from './elements/Header';\nimport Home from './Home';\nimport Movie from './Movie';\nimport NotFound from './NotFound';\n\nimport { GlobalStyle } from './styles/GlobalStyle';\n\nconst App = () => (\n    <>\n        <Header />\n        <Router>\n            <Home path=\"/\"/>\n            <Movie path=\"/:movieId\"/>\n            <NotFound default />\n        </Router>\n        <GlobalStyle />\n    </>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/no_image.104a1a91.png\";"],"sourceRoot":""}